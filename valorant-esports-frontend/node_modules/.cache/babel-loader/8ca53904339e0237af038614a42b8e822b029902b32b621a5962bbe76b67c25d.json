{"ast":null,"code":"var _jsxFileName = \"D:\\\\esports-valorant\\\\valorant-esports-frontend\\\\src\\\\components\\\\Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, Box, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard() {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [teams, setTeams] = useState([]);\n  useEffect(() => {\n    fetchLeaderboard();\n    fetchTeamLeaderboard();\n  }, []);\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/comparisons/leaderboard', {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      setPlayers(response.data);\n    } catch (error) {\n      console.error('Error fetching leaderboard:', error);\n    }\n  };\n  const fetchTeamLeaderboard = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/comparisons/leaderboard-teams', {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      setTeams(response.data);\n    } catch (error) {\n      console.error('Error fetching team leaderboard:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Top Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), players.map(player => /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Kills: \", player.stats.kills]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Deaths: \", player.stats.deaths]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Assists: \", player.stats.assists]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"K/D Ratio: \", (player.stats.kills / player.stats.deaths).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, player._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Top Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), teams.map(team => /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: team.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Wins: \", team.stats.wins]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Losses: \", team.stats.losses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Total Games: \", team.stats.totalGames]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, team._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Leaderboard, \"3FMexiKLLFHn7PtMLu1i5FF6e8s=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Typography","Box","Paper","jsxDEV","_jsxDEV","Leaderboard","_s","players","setPlayers","teams","setTeams","fetchLeaderboard","fetchTeamLeaderboard","response","get","headers","Authorization","sessionStorage","getItem","data","error","console","maxWidth","children","sx","mt","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","player","p","mb","name","stats","kills","deaths","assists","toFixed","_id","team","wins","losses","totalGames","_c","$RefreshReg$"],"sources":["D:/esports-valorant/valorant-esports-frontend/src/components/Leaderboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Typography, Box, Paper } from '@mui/material';\r\n\r\nfunction Leaderboard() {\r\n  const [players, setPlayers] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchLeaderboard();\r\n    fetchTeamLeaderboard();\r\n  }, []);\r\n\r\n  const fetchLeaderboard = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/comparisons/leaderboard', {\r\n        headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\r\n      });\r\n      setPlayers(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching leaderboard:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTeamLeaderboard = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/comparisons/leaderboard-teams', {\r\n        headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\r\n      });\r\n      setTeams(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching team leaderboard:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box sx={{ mt: 8 }}>\r\n        <Typography variant=\"h4\" gutterBottom>Leaderboard</Typography>\r\n        \r\n        <Typography variant=\"h5\" gutterBottom>Top Players</Typography>\r\n        {players.map(player => (\r\n          <Paper key={player._id} sx={{ p: 2, mb: 2 }}>\r\n            <Typography variant=\"h6\">{player.name}</Typography>\r\n            <Typography>Kills: {player.stats.kills}</Typography>\r\n            <Typography>Deaths: {player.stats.deaths}</Typography>\r\n            <Typography>Assists: {player.stats.assists}</Typography>\r\n            <Typography>K/D Ratio: {(player.stats.kills / player.stats.deaths).toFixed(2)}</Typography>\r\n          </Paper>\r\n        ))}\r\n\r\n        <Typography variant=\"h5\" gutterBottom>Top Teams</Typography>\r\n        {teams.map(team => (\r\n          <Paper key={team._id} sx={{ p: 2, mb: 2 }}>\r\n            <Typography variant=\"h6\">{team.name}</Typography>\r\n            <Typography>Wins: {team.stats.wins}</Typography>\r\n            <Typography>Losses: {team.stats.losses}</Typography>\r\n            <Typography>Total Games: {team.stats.totalGames}</Typography>\r\n          </Paper>\r\n        ))}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}