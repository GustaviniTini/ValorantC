{"ast":null,"code":"var _jsxFileName = \"D:\\\\esports-valorant\\\\valorant-esports-frontend\\\\src\\\\components\\\\Matches.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, Box, List, ListItem, ListItemText, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Paper, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Matches() {\n  _s();\n  const [matches, setMatches] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [maps, setMaps] = useState([]);\n  const [agents, setAgents] = useState([]);\n  const [selectedMaps, setSelectedMaps] = useState([{\n    mapId: '',\n    team1Score: '',\n    team2Score: '',\n    stats: {}\n  }]);\n  const [team1, setTeam1] = useState('');\n  const [team2, setTeam2] = useState('');\n  const [editMatch, setEditMatch] = useState(null);\n  const [deleteMatch, setDeleteMatch] = useState(null);\n  const role = sessionStorage.getItem('role');\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    await Promise.all([fetchMatches(), fetchTeams(), fetchPlayers(), fetchMaps(), fetchAgents()]);\n  };\n  const fetchMatches = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/matches', {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      setMatches(response.data);\n      console.log('Fetched matches:', response.data);\n    } catch (error) {\n      console.error('Error fetching matches:', error);\n    }\n  };\n  const fetchTeams = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/teams', {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      setTeams(response.data);\n    } catch (error) {\n      console.error('Error fetching teams:', error);\n    }\n  };\n  const fetchPlayers = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/players', {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      setPlayers(response.data);\n    } catch (error) {\n      console.error('Error fetching players:', error);\n    }\n  };\n  const fetchMaps = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/maps', {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      setMaps(response.data);\n    } catch (error) {\n      console.error('Error fetching maps:', error);\n    }\n  };\n  const fetchAgents = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/agents', {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      setAgents(response.data);\n    } catch (error) {\n      console.error('Error fetching agents:', error);\n    }\n  };\n  const handleMapChange = (index, field, value) => {\n    const newMaps = [...selectedMaps];\n    newMaps[index][field] = value;\n    setSelectedMaps(newMaps);\n  };\n  const handleStatsChange = (mapIndex, playerId, stat, value) => {\n    const newMaps = [...selectedMaps];\n    if (!newMaps[mapIndex].stats[playerId]) {\n      newMaps[mapIndex].stats[playerId] = {\n        kills: 0,\n        deaths: 0,\n        assists: 0,\n        agent: ''\n      };\n    }\n    newMaps[mapIndex].stats[playerId][stat] = value;\n    setSelectedMaps(newMaps);\n  };\n  const handleAgentChange = (mapIndex, playerId, agent) => {\n    const newMaps = [...selectedMaps];\n    if (!newMaps[mapIndex].stats[playerId]) {\n      newMaps[mapIndex].stats[playerId] = {\n        kills: 0,\n        deaths: 0,\n        assists: 0,\n        agent: ''\n      };\n    }\n    newMaps[mapIndex].stats[playerId].agent = agent;\n    setSelectedMaps(newMaps);\n  };\n  const handleAddMap = () => {\n    if (selectedMaps.length < 3) {\n      setSelectedMaps([...selectedMaps, {\n        mapId: '',\n        team1Score: '',\n        team2Score: '',\n        stats: {}\n      }]);\n    }\n  };\n  const handleRemoveMap = index => {\n    const newMaps = selectedMaps.filter((_, i) => i !== index);\n    setSelectedMaps(newMaps);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const matchData = {\n      team1,\n      team2,\n      maps: selectedMaps\n    };\n    if (editMatch) {\n      try {\n        await axios.put(`http://localhost:3000/api/matches/${editMatch._id}`, matchData, {\n          headers: {\n            Authorization: `Bearer ${sessionStorage.getItem('token')}`\n          }\n        });\n        fetchMatches();\n        setEditMatch(null);\n        resetForm();\n      } catch (error) {\n        console.error('Error updating match:', error);\n      }\n    } else {\n      try {\n        await axios.post('http://localhost:3000/api/matches', matchData, {\n          headers: {\n            Authorization: `Bearer ${sessionStorage.getItem('token')}`\n          }\n        });\n        fetchMatches();\n        resetForm();\n      } catch (error) {\n        console.error('Error creating match:', error);\n      }\n    }\n  };\n  const handleEdit = match => {\n    setEditMatch(match);\n    setTeam1(match.team1._id);\n    setTeam2(match.team2._id);\n    setSelectedMaps(match.maps.map(map => ({\n      mapId: map.map._id,\n      team1Score: map.team1Score,\n      team2Score: map.team2Score,\n      stats: map.stats.reduce((acc, stat) => {\n        acc[stat.player._id] = {\n          kills: stat.kills,\n          deaths: stat.deaths,\n          assists: stat.assists,\n          agent: stat.agent._id\n        };\n        return acc;\n      }, {})\n    })));\n  };\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`http://localhost:3000/api/matches/${deleteMatch._id}`, {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      setMatches(matches.filter(match => match._id !== deleteMatch._id));\n      setDeleteMatch(null);\n    } catch (error) {\n      console.error('Error deleting match:', error);\n    }\n  };\n  const resetForm = () => {\n    setTeam1('');\n    setTeam2('');\n    setSelectedMaps([{\n      mapId: '',\n      team1Score: '',\n      team2Score: '',\n      stats: {}\n    }]);\n  };\n  const renderPlayerStats = (teamId, mapIndex) => {\n    return players.filter(player => player.team && player.team._id === teamId).map(player => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Agent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedMaps[mapIndex].stats && selectedMaps[mapIndex].stats[player._id] ? selectedMaps[mapIndex].stats[player._id].agent : '',\n          onChange: e => handleAgentChange(mapIndex, player._id, e.target.value),\n          children: agents.map(agent => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: agent._id,\n            children: agent.name\n          }, agent._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Kills\",\n        fullWidth: true,\n        type: \"number\",\n        value: selectedMaps[mapIndex].stats && selectedMaps[mapIndex].stats[player._id] ? selectedMaps[mapIndex].stats[player._id].kills : '',\n        onChange: e => handleStatsChange(mapIndex, player._id, 'kills', e.target.value),\n        required: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Deaths\",\n        fullWidth: true,\n        type: \"number\",\n        value: selectedMaps[mapIndex].stats && selectedMaps[mapIndex].stats[player._id] ? selectedMaps[mapIndex].stats[player._id].deaths : '',\n        onChange: e => handleStatsChange(mapIndex, player._id, 'deaths', e.target.value),\n        required: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Assists\",\n        fullWidth: true,\n        type: \"number\",\n        value: selectedMaps[mapIndex].stats && selectedMaps[mapIndex].stats[player._id] ? selectedMaps[mapIndex].stats[player._id].assists : '',\n        onChange: e => handleStatsChange(mapIndex, player._id, 'assists', e.target.value),\n        required: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, player._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this));\n  };\n  const addAutomatedMatches = async () => {\n    const teamPairs = [];\n\n    // Generate all unique pairs of teams\n    for (let i = 0; i < teams.length; i++) {\n      for (let j = i + 1; j < teams.length; j++) {\n        teamPairs.push([teams[i], teams[j]]);\n      }\n    }\n    for (const pair of teamPairs) {\n      const [team1, team2] = pair;\n      const existingMatch = matches.some(match => match.team1._id === team1._id && match.team2._id === team2._id || match.team1._id === team2._id && match.team2._id === team1._id);\n      if (existingMatch) {\n        console.log(`Match between ${team1.name} and ${team2.name} already exists.`);\n        continue;\n      }\n      const newMaps = [];\n      const usedAgents = {};\n      const usedMaps = new Set();\n      for (let mapIndex = 0; mapIndex < 3; mapIndex++) {\n        let mapId;\n        do {\n          mapId = maps[Math.floor(Math.random() * maps.length)]._id;\n        } while (usedMaps.has(mapId));\n        usedMaps.add(mapId);\n        const stats = {};\n        const playersTeam1 = players.filter(player => player.team._id === team1._id);\n        const playersTeam2 = players.filter(player => player.team._id === team2._id);\n        for (const player of playersTeam1) {\n          let agentId;\n          do {\n            var _usedAgents$mapId;\n            agentId = agents[Math.floor(Math.random() * agents.length)]._id;\n          } while ((_usedAgents$mapId = usedAgents[mapId]) !== null && _usedAgents$mapId !== void 0 && _usedAgents$mapId.has(agentId));\n          if (!usedAgents[mapId]) {\n            usedAgents[mapId] = new Set();\n          }\n          usedAgents[mapId].add(agentId);\n          stats[player._id] = {\n            kills: Math.floor(Math.random() * 31),\n            deaths: Math.floor(Math.random() * 31),\n            assists: Math.floor(Math.random() * 31),\n            agent: agentId\n          };\n        }\n        for (const player of playersTeam2) {\n          let agentId;\n          do {\n            var _usedAgents$mapId2;\n            agentId = agents[Math.floor(Math.random() * agents.length)]._id;\n          } while ((_usedAgents$mapId2 = usedAgents[mapId]) !== null && _usedAgents$mapId2 !== void 0 && _usedAgents$mapId2.has(agentId));\n          if (!usedAgents[mapId]) {\n            usedAgents[mapId] = new Set();\n          }\n          usedAgents[mapId].add(agentId);\n          stats[player._id] = {\n            kills: Math.floor(Math.random() * 31),\n            deaths: Math.floor(Math.random() * 31),\n            assists: Math.floor(Math.random() * 31),\n            agent: agentId\n          };\n        }\n        newMaps.push({\n          mapId,\n          team1Score: Math.floor(Math.random() * 14),\n          team2Score: Math.floor(Math.random() * 14),\n          stats\n        });\n      }\n      const matchData = {\n        team1: team1._id,\n        team2: team2._id,\n        maps: newMaps\n      };\n      try {\n        await axios.post('http://localhost:3000/api/matches', matchData, {\n          headers: {\n            Authorization: `Bearer ${sessionStorage.getItem('token')}`\n          }\n        });\n        console.log(`Match between ${team1.name} and ${team2.name} added.`);\n      } catch (error) {\n        console.error(`Error creating match between ${team1.name} and ${team2.name}:`, error);\n      }\n    }\n    fetchMatches();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), role === 'admin' && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Team 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: team1,\n              onChange: e => setTeam1(e.target.value),\n              children: teams.map(team => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: team._id,\n                children: team.name\n              }, team._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            margin: \"normal\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Team 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: team2,\n              onChange: e => setTeam2(e.target.value),\n              children: teams.map(team => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: team._id,\n                children: team.name\n              }, team._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), selectedMaps.map((map, mapIndex) => {\n            var _teams$find, _teams$find2;\n            return /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2,\n                p: 2,\n                border: '1px solid #ccc',\n                borderRadius: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                margin: \"normal\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Map\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: map.mapId,\n                  onChange: e => handleMapChange(mapIndex, 'mapId', e.target.value),\n                  children: maps.map(map => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: map._id,\n                    children: map.name\n                  }, map._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Team 1 Score\",\n                fullWidth: true,\n                value: map.team1Score,\n                onChange: e => handleMapChange(mapIndex, 'team1Score', e.target.value),\n                required: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Team 2 Score\",\n                fullWidth: true,\n                value: map.team2Score,\n                onChange: e => handleMapChange(mapIndex, 'team2Score', e.target.value),\n                required: true,\n                margin: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: [\"Player Stats Team 1 (\", (_teams$find = teams.find(team => team._id === team1)) === null || _teams$find === void 0 ? void 0 : _teams$find.name, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this), renderPlayerStats(team1, mapIndex), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: [\"Player Stats Team 2 (\", (_teams$find2 = teams.find(team => team._id === team2)) === null || _teams$find2 === void 0 ? void 0 : _teams$find2.name, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this), renderPlayerStats(team2, mapIndex), selectedMaps.length > 1 && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"secondary\",\n                onClick: () => handleRemoveMap(mapIndex),\n                sx: {\n                  mt: 1\n                },\n                children: \"Remove Map\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this)]\n            }, mapIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this);\n          }), selectedMaps.length < 3 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: handleAddMap,\n            sx: {\n              mt: 2\n            },\n            children: \"Add Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            children: editMatch ? 'Update Match' : 'Add Match'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          onClick: addAutomatedMatches,\n          children: \"Add Automated Matches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          mt: 4\n        },\n        children: matches.map(match => /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            secondaryAction: role === 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"edit\",\n                onClick: () => handleEdit(match),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                onClick: () => setDeleteMatch(match),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${match.team1.name} vs ${match.team2.name}`,\n              secondary: `Winner: ${match.winner ? match.winner.name : 'TBD'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this)\n        }, match._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: !!deleteMatch,\n        onClose: () => setDeleteMatch(null),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Delete Match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: [\"Are you sure you want to delete the match between \\\"\", deleteMatch === null || deleteMatch === void 0 ? void 0 : deleteMatch.team1.name, \"\\\" and \\\"\", deleteMatch === null || deleteMatch === void 0 ? void 0 : deleteMatch.team2.name, \"\\\"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setDeleteMatch(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDelete,\n            color: \"error\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n}\n_s(Matches, \"V/pBsOBwnL81yd2S8T6UXnpkRhk=\");\n_c = Matches;\nexport default Matches;\nvar _c;\n$RefreshReg$(_c, \"Matches\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","TextField","Button","Typography","Box","List","ListItem","ListItemText","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Paper","Select","MenuItem","FormControl","InputLabel","EditIcon","DeleteIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Matches","_s","matches","setMatches","teams","setTeams","players","setPlayers","maps","setMaps","agents","setAgents","selectedMaps","setSelectedMaps","mapId","team1Score","team2Score","stats","team1","setTeam1","team2","setTeam2","editMatch","setEditMatch","deleteMatch","setDeleteMatch","role","sessionStorage","getItem","fetchData","Promise","all","fetchMatches","fetchTeams","fetchPlayers","fetchMaps","fetchAgents","response","get","headers","Authorization","data","console","log","error","handleMapChange","index","field","value","newMaps","handleStatsChange","mapIndex","playerId","stat","kills","deaths","assists","agent","handleAgentChange","handleAddMap","length","handleRemoveMap","filter","_","i","handleSubmit","e","preventDefault","matchData","put","_id","resetForm","post","handleEdit","match","map","reduce","acc","player","handleDelete","delete","renderPlayerStats","teamId","team","sx","mb","children","variant","name","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","margin","required","onChange","target","label","type","addAutomatedMatches","teamPairs","j","push","pair","existingMatch","some","usedAgents","usedMaps","Set","Math","floor","random","has","add","playersTeam1","playersTeam2","agentId","_usedAgents$mapId","_usedAgents$mapId2","maxWidth","mt","gutterBottom","p","onSubmit","_teams$find","_teams$find2","border","borderRadius","find","color","onClick","secondaryAction","edge","primary","secondary","winner","open","onClose","_c","$RefreshReg$"],"sources":["D:/esports-valorant/valorant-esports-frontend/src/components/Matches.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container, TextField, Button, Typography, Box, List, ListItem, ListItemText,\r\n  IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\r\n  Paper, Select, MenuItem, FormControl, InputLabel\r\n} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nfunction Matches() {\r\n  const [matches, setMatches] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [players, setPlayers] = useState([]);\r\n  const [maps, setMaps] = useState([]);\r\n  const [agents, setAgents] = useState([]);\r\n  const [selectedMaps, setSelectedMaps] = useState([{ mapId: '', team1Score: '', team2Score: '', stats: {} }]);\r\n  const [team1, setTeam1] = useState('');\r\n  const [team2, setTeam2] = useState('');\r\n  const [editMatch, setEditMatch] = useState(null);\r\n  const [deleteMatch, setDeleteMatch] = useState(null);\r\n  const role = sessionStorage.getItem('role');\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    await Promise.all([fetchMatches(), fetchTeams(), fetchPlayers(), fetchMaps(), fetchAgents()]);\r\n  };\r\n\r\n  const fetchMatches = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/matches', {\r\n        headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\r\n      });\r\n      setMatches(response.data);\r\n      console.log('Fetched matches:', response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching matches:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTeams = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/teams', {\r\n        headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\r\n      });\r\n      setTeams(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching teams:', error);\r\n    }\r\n  };\r\n\r\n  const fetchPlayers = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/players', {\r\n        headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\r\n      });\r\n      setPlayers(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching players:', error);\r\n    }\r\n  };\r\n\r\n  const fetchMaps = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/maps', {\r\n        headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\r\n      });\r\n      setMaps(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching maps:', error);\r\n    }\r\n  };\r\n\r\n  const fetchAgents = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/agents', {\r\n        headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\r\n      });\r\n      setAgents(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching agents:', error);\r\n    }\r\n  };\r\n\r\n  const handleMapChange = (index, field, value) => {\r\n    const newMaps = [...selectedMaps];\r\n    newMaps[index][field] = value;\r\n    setSelectedMaps(newMaps);\r\n  };\r\n\r\n  const handleStatsChange = (mapIndex, playerId, stat, value) => {\r\n    const newMaps = [...selectedMaps];\r\n    if (!newMaps[mapIndex].stats[playerId]) {\r\n      newMaps[mapIndex].stats[playerId] = { kills: 0, deaths: 0, assists: 0, agent: '' };\r\n    }\r\n    newMaps[mapIndex].stats[playerId][stat] = value;\r\n    setSelectedMaps(newMaps);\r\n  };\r\n\r\n  const handleAgentChange = (mapIndex, playerId, agent) => {\r\n    const newMaps = [...selectedMaps];\r\n    if (!newMaps[mapIndex].stats[playerId]) {\r\n      newMaps[mapIndex].stats[playerId] = { kills: 0, deaths: 0, assists: 0, agent: '' };\r\n    }\r\n    newMaps[mapIndex].stats[playerId].agent = agent;\r\n    setSelectedMaps(newMaps);\r\n  };\r\n\r\n  const handleAddMap = () => {\r\n    if (selectedMaps.length < 3) {\r\n      setSelectedMaps([...selectedMaps, { mapId: '', team1Score: '', team2Score: '', stats: {} }]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveMap = (index) => {\r\n    const newMaps = selectedMaps.filter((_, i) => i !== index);\r\n    setSelectedMaps(newMaps);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const matchData = { team1, team2, maps: selectedMaps };\r\n\r\n    if (editMatch) {\r\n      try {\r\n        await axios.put(`http://localhost:3000/api/matches/${editMatch._id}`, matchData, {\r\n          headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\r\n        });\r\n        fetchMatches();\r\n        setEditMatch(null);\r\n        resetForm();\r\n      } catch (error) {\r\n        console.error('Error updating match:', error);\r\n      }\r\n    } else {\r\n      try {\r\n        await axios.post('http://localhost:3000/api/matches', matchData, {\r\n          headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\r\n        });\r\n        fetchMatches();\r\n        resetForm();\r\n      } catch (error) {\r\n        console.error('Error creating match:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEdit = (match) => {\r\n    setEditMatch(match);\r\n    setTeam1(match.team1._id);\r\n    setTeam2(match.team2._id);\r\n    setSelectedMaps(match.maps.map((map) => ({\r\n      mapId: map.map._id,\r\n      team1Score: map.team1Score,\r\n      team2Score: map.team2Score,\r\n      stats: map.stats.reduce((acc, stat) => {\r\n        acc[stat.player._id] = { kills: stat.kills, deaths: stat.deaths, assists: stat.assists, agent: stat.agent._id };\r\n        return acc;\r\n      }, {})\r\n    })));\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:3000/api/matches/${deleteMatch._id}`, {\r\n        headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\r\n      });\r\n      setMatches(matches.filter((match) => match._id !== deleteMatch._id));\r\n      setDeleteMatch(null);\r\n    } catch (error) {\r\n      console.error('Error deleting match:', error);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setTeam1('');\r\n    setTeam2('');\r\n    setSelectedMaps([{ mapId: '', team1Score: '', team2Score: '', stats: {} }]);\r\n  };\r\n\r\n  const renderPlayerStats = (teamId, mapIndex) => {\r\n    return players.filter(player => player.team && player.team._id === teamId).map(player => (\r\n      <Box key={player._id} sx={{ mb: 2 }}>\r\n        <Typography variant=\"subtitle1\">{player.name}</Typography>\r\n        <FormControl fullWidth margin=\"normal\" required>\r\n          <InputLabel>Agent</InputLabel>\r\n          <Select\r\n            value={selectedMaps[mapIndex].stats && selectedMaps[mapIndex].stats[player._id] ? selectedMaps[mapIndex].stats[player._id].agent : ''}\r\n            onChange={(e) => handleAgentChange(mapIndex, player._id, e.target.value)}\r\n          >\r\n            {agents.map((agent) => (\r\n              <MenuItem key={agent._id} value={agent._id}>{agent.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          label=\"Kills\"\r\n          fullWidth\r\n          type=\"number\"\r\n          value={selectedMaps[mapIndex].stats && selectedMaps[mapIndex].stats[player._id] ? selectedMaps[mapIndex].stats[player._id].kills : ''}\r\n          onChange={(e) => handleStatsChange(mapIndex, player._id, 'kills', e.target.value)}\r\n          required\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Deaths\"\r\n          fullWidth\r\n          type=\"number\"\r\n          value={selectedMaps[mapIndex].stats && selectedMaps[mapIndex].stats[player._id] ? selectedMaps[mapIndex].stats[player._id].deaths : ''}\r\n          onChange={(e) => handleStatsChange(mapIndex, player._id, 'deaths', e.target.value)}\r\n          required\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Assists\"\r\n          fullWidth\r\n          type=\"number\"\r\n          value={selectedMaps[mapIndex].stats && selectedMaps[mapIndex].stats[player._id] ? selectedMaps[mapIndex].stats[player._id].assists : ''}\r\n          onChange={(e) => handleStatsChange(mapIndex, player._id, 'assists', e.target.value)}\r\n          required\r\n          margin=\"normal\"\r\n        />\r\n      </Box>\r\n    ));\r\n  };\r\n\r\n  const addAutomatedMatches = async () => {\r\n    const teamPairs = [];\r\n\r\n    // Generate all unique pairs of teams\r\n    for (let i = 0; i < teams.length; i++) {\r\n      for (let j = i + 1; j < teams.length; j++) {\r\n        teamPairs.push([teams[i], teams[j]]);\r\n      }\r\n    }\r\n\r\n    for (const pair of teamPairs) {\r\n      const [team1, team2] = pair;\r\n\r\n      const existingMatch = matches.some(\r\n        match =>\r\n          (match.team1._id === team1._id && match.team2._id === team2._id) ||\r\n          (match.team1._id === team2._id && match.team2._id === team1._id)\r\n      );\r\n\r\n      if (existingMatch) {\r\n        console.log(`Match between ${team1.name} and ${team2.name} already exists.`);\r\n        continue;\r\n      }\r\n\r\n      const newMaps = [];\r\n      const usedAgents = {};\r\n      const usedMaps = new Set();\r\n\r\n      for (let mapIndex = 0; mapIndex < 3; mapIndex++) {\r\n        let mapId;\r\n        do {\r\n          mapId = maps[Math.floor(Math.random() * maps.length)]._id;\r\n        } while (usedMaps.has(mapId));\r\n        usedMaps.add(mapId);\r\n\r\n        const stats = {};\r\n        const playersTeam1 = players.filter(player => player.team._id === team1._id);\r\n        const playersTeam2 = players.filter(player => player.team._id === team2._id);\r\n\r\n        for (const player of playersTeam1) {\r\n          let agentId;\r\n          do {\r\n            agentId = agents[Math.floor(Math.random() * agents.length)]._id;\r\n          } while (usedAgents[mapId]?.has(agentId));\r\n\r\n          if (!usedAgents[mapId]) {\r\n            usedAgents[mapId] = new Set();\r\n          }\r\n          usedAgents[mapId].add(agentId);\r\n\r\n          stats[player._id] = {\r\n            kills: Math.floor(Math.random() * 31),\r\n            deaths: Math.floor(Math.random() * 31),\r\n            assists: Math.floor(Math.random() * 31),\r\n            agent: agentId\r\n          };\r\n        }\r\n\r\n        for (const player of playersTeam2) {\r\n          let agentId;\r\n          do {\r\n            agentId = agents[Math.floor(Math.random() * agents.length)]._id;\r\n          } while (usedAgents[mapId]?.has(agentId));\r\n\r\n          if (!usedAgents[mapId]) {\r\n            usedAgents[mapId] = new Set();\r\n          }\r\n          usedAgents[mapId].add(agentId);\r\n\r\n          stats[player._id] = {\r\n            kills: Math.floor(Math.random() * 31),\r\n            deaths: Math.floor(Math.random() * 31),\r\n            assists: Math.floor(Math.random() * 31),\r\n            agent: agentId\r\n          };\r\n        }\r\n\r\n        newMaps.push({\r\n          mapId,\r\n          team1Score: Math.floor(Math.random() * 14),\r\n          team2Score: Math.floor(Math.random() * 14),\r\n          stats\r\n        });\r\n      }\r\n\r\n      const matchData = { team1: team1._id, team2: team2._id, maps: newMaps };\r\n\r\n      try {\r\n        await axios.post('http://localhost:3000/api/matches', matchData, {\r\n          headers: { Authorization: `Bearer ${sessionStorage.getItem('token')}` }\r\n        });\r\n        console.log(`Match between ${team1.name} and ${team2.name} added.`);\r\n      } catch (error) {\r\n        console.error(`Error creating match between ${team1.name} and ${team2.name}:`, error);\r\n      }\r\n    }\r\n\r\n    fetchMatches();\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box sx={{ mt: 8 }}>\r\n        <Typography variant=\"h4\" gutterBottom>Matches</Typography>\r\n        {role === 'admin' && (\r\n          <Paper sx={{ p: 2 }}>\r\n            <form onSubmit={handleSubmit}>\r\n              <FormControl fullWidth margin=\"normal\" required>\r\n                <InputLabel>Team 1</InputLabel>\r\n                <Select\r\n                  value={team1}\r\n                  onChange={(e) => setTeam1(e.target.value)}\r\n                >\r\n                  {teams.map((team) => (\r\n                    <MenuItem key={team._id} value={team._id}>{team.name}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl fullWidth margin=\"normal\" required>\r\n                <InputLabel>Team 2</InputLabel>\r\n                <Select\r\n                  value={team2}\r\n                  onChange={(e) => setTeam2(e.target.value)}\r\n                >\r\n                  {teams.map((team) => (\r\n                    <MenuItem key={team._id} value={team._id}>{team.name}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              {selectedMaps.map((map, mapIndex) => (\r\n                <Box key={mapIndex} sx={{ mb: 2, p: 2, border: '1px solid #ccc', borderRadius: 1 }}>\r\n                  <FormControl fullWidth margin=\"normal\" required>\r\n                    <InputLabel>Map</InputLabel>\r\n                    <Select\r\n                      value={map.mapId}\r\n                      onChange={(e) => handleMapChange(mapIndex, 'mapId', e.target.value)}\r\n                    >\r\n                      {maps.map((map) => (\r\n                        <MenuItem key={map._id} value={map._id}>{map.name}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <TextField\r\n                    label=\"Team 1 Score\"\r\n                    fullWidth\r\n                    value={map.team1Score}\r\n                    onChange={(e) => handleMapChange(mapIndex, 'team1Score', e.target.value)}\r\n                    required\r\n                    margin=\"normal\"\r\n                  />\r\n                  <TextField\r\n                    label=\"Team 2 Score\"\r\n                    fullWidth\r\n                    value={map.team2Score}\r\n                    onChange={(e) => handleMapChange(mapIndex, 'team2Score', e.target.value)}\r\n                    required\r\n                    margin=\"normal\"\r\n                  />\r\n                  <Typography variant=\"h6\" gutterBottom>Player Stats Team 1 ({teams.find(team => team._id === team1)?.name})</Typography>\r\n                  {renderPlayerStats(team1, mapIndex)}\r\n                  <Typography variant=\"h6\" gutterBottom>Player Stats Team 2 ({teams.find(team => team._id === team2)?.name})</Typography>\r\n                  {renderPlayerStats(team2, mapIndex)}\r\n                  {selectedMaps.length > 1 && (\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      onClick={() => handleRemoveMap(mapIndex)}\r\n                      sx={{ mt: 1 }}\r\n                    >\r\n                      Remove Map\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              ))}\r\n              {selectedMaps.length < 3 && (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={handleAddMap}\r\n                  sx={{ mt: 2 }}\r\n                >\r\n                  Add Map\r\n                </Button>\r\n              )}\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ mt: 2 }}>\r\n                {editMatch ? 'Update Match' : 'Add Match'}\r\n              </Button>\r\n            </form>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              sx={{ mt: 2 }}\r\n              onClick={addAutomatedMatches}\r\n            >\r\n              Add Automated Matches\r\n            </Button>\r\n          </Paper>\r\n        )}\r\n        <List sx={{ mt: 4 }}>\r\n          {matches.map((match) => (\r\n            <Paper key={match._id} sx={{ mb: 2 }}>\r\n              <ListItem secondaryAction={\r\n                role === 'admin' && (\r\n                  <>\r\n                    <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => handleEdit(match)}>\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => setDeleteMatch(match)}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </>\r\n                )\r\n              }>\r\n                <ListItemText\r\n                  primary={`${match.team1.name} vs ${match.team2.name}`}\r\n                  secondary={`Winner: ${match.winner ? match.winner.name : 'TBD'}`}\r\n                />\r\n              </ListItem>\r\n            </Paper>\r\n          ))}\r\n        </List>\r\n\r\n        <Dialog open={!!deleteMatch} onClose={() => setDeleteMatch(null)}>\r\n          <DialogTitle>Delete Match</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you sure you want to delete the match between \"{deleteMatch?.team1.name}\" and \"{deleteMatch?.team2.name}\"?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setDeleteMatch(null)}>Cancel</Button>\r\n            <Button onClick={handleDelete} color=\"error\">Delete</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Matches;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}