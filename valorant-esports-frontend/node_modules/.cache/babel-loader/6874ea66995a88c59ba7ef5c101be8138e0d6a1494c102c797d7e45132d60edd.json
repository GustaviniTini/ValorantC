{"ast":null,"code":"var _jsxFileName = \"D:\\\\valorant-esports\\\\valorant-esports-frontend\\\\src\\\\components\\\\MatchDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getMatchById } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MatchDetail({\n  match\n}) {\n  _s();\n  const [matchDetail, setMatchDetail] = useState(null);\n  const matchId = match.params.id;\n  useEffect(() => {\n    async function fetchMatchDetail() {\n      try {\n        const response = await getMatchById(matchId);\n        setMatchDetail(response.data);\n      } catch (error) {\n        console.error('Error fetching match detail:', error);\n      }\n    }\n    fetchMatchDetail();\n  }, [matchId]);\n  if (!matchDetail) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Match Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [matchDetail.team1.name, \" vs \", matchDetail.team2.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: matchDetail.maps.map((map, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: map.mapName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Team 1 Score: \", map.team1Score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Team 2 Score: \", map.team2Score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Player Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: map.stats.map(stat => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [stat.player.name, \": \", stat.kills, \" kills, \", stat.deaths, \" deaths, \", stat.assists, \" assists\"]\n          }, stat.player._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(MatchDetail, \"4HEK/r76HLXjfE+EchTBKqyIZuY=\");\n_c = MatchDetail;\nexport default MatchDetail;\nvar _c;\n$RefreshReg$(_c, \"MatchDetail\");","map":{"version":3,"names":["React","useState","useEffect","getMatchById","jsxDEV","_jsxDEV","MatchDetail","match","_s","matchDetail","setMatchDetail","matchId","params","id","fetchMatchDetail","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","team1","name","team2","maps","map","index","mapName","team1Score","team2Score","stats","stat","player","kills","deaths","assists","_id","_c","$RefreshReg$"],"sources":["D:/valorant-esports/valorant-esports-frontend/src/components/MatchDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getMatchById } from '../services/api';\r\n\r\nfunction MatchDetail({ match }) {\r\n  const [matchDetail, setMatchDetail] = useState(null);\r\n  const matchId = match.params.id;\r\n\r\n  useEffect(() => {\r\n    async function fetchMatchDetail() {\r\n      try {\r\n        const response = await getMatchById(matchId);\r\n        setMatchDetail(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching match detail:', error);\r\n      }\r\n    }\r\n    fetchMatchDetail();\r\n  }, [matchId]);\r\n\r\n  if (!matchDetail) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Match Detail</h2>\r\n      <p>{matchDetail.team1.name} vs {matchDetail.team2.name}</p>\r\n      <h3>Maps</h3>\r\n      <ul>\r\n        {matchDetail.maps.map((map, index) => (\r\n          <li key={index}>\r\n            <h4>{map.mapName}</h4>\r\n            <p>Team 1 Score: {map.team1Score}</p>\r\n            <p>Team 2 Score: {map.team2Score}</p>\r\n            <h5>Player Stats</h5>\r\n            <ul>\r\n              {map.stats.map(stat => (\r\n                <li key={stat.player._id}>\r\n                  {stat.player.name}: {stat.kills} kills, {stat.deaths} deaths, {stat.assists} assists\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MatchDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}